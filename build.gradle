plugins {
  id 'java'
  id 'checkstyle'
  id("com.diffplug.spotless") version "7.0.2"
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '3.1.1'
}

group 'at.fh.burgenland'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.0'
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainClass = 'at.fh.burgenland.HelloApplication'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  testImplementation "org.testfx:testfx-junit5:4.0.18"
  testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.13.2'
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testImplementation 'org.hamcrest:hamcrest:3.0'
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

checkstyle {
  // This is required to refer to the Google Style XML provided in the Checkstyle jar.
  def archive = configurations.checkstyle.resolve().find { it.name.startsWith("checkstyle") }
  config = resources.text.fromArchiveEntry(archive, "google_checks.xml")

  toolVersion = '10.21.0'
  maxWarnings = 0
  maxErrors = 0
}
test {
  useJUnitPlatform()
}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

spotless {
  java {
    googleJavaFormat('1.17.0') // Use the formatter version you prefer
  }
}